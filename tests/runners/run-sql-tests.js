const { waitForServer, TestRunner, puppeteer } = require('../utils/test-config');
const SQLFunctionTests = require('../sql-function-tests');

async function runSQLTests() {
    console.log('üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ SQL —Ñ—É–Ω–∫—Ü–∏–π...\n');
    
    try {
        await waitForServer(3);
        const browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();
        const runner = new TestRunner();
        
        const sqlTests = new SQLFunctionTests(page, runner);
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await page.goto('http://localhost:8000/index.html', { waitUntil: 'networkidle0' });
        
        // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö SQL —Ç–µ—Å—Ç–æ–≤
        await sqlTests.testExecuteTestSQL();
        await sqlTests.testCheckSolutionSQL();
        await sqlTests.testExecuteTestButton();
        await sqlTests.testCheckSolutionButton();
        
        await browser.close();
        const success = runner.summary();
        process.exit(success ? 0 : 1);
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL —Ç–µ—Å—Ç–æ–≤:', error);
        process.exit(1);
    }
}

if (require.main === module) {
    runSQLTests();
}

module.exports = runSQLTests;