const { waitForServer, TestRunner, puppeteer } = require('../utils/test-config');
const TaskSystemTests = require('../task-system-tests');

async function runTasksTests() {
    console.log('üìù –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∑–∞–¥–∞—á...\n');
    
    try {
        await waitForServer(3);
        const browser = await puppeteer.launch({ headless: true });
        const page = await browser.newPage();
        const runner = new TestRunner();
        
        const taskTests = new TaskSystemTests(page, runner);
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await page.goto('http://localhost:8000/index.html', { waitUntil: 'networkidle0' });
        
        // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∑–∞–¥–∞—á
        await taskTests.testTaskSystem();
        await taskTests.testTaskTextFieldsLocalization();
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        const currentTaskTitle = await page.evaluate(() => {
            const titleElement = document.querySelector('#task-title');
            return titleElement ? titleElement.textContent.trim() : 'Unknown Task';
        });
        console.log(`–¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: ${currentTaskTitle}`);
        
        await taskTests.testTaskExecution(currentTaskTitle);
        await taskTests.testTaskSwitch(currentTaskTitle);
        
        await browser.close();
        const success = runner.summary();
        process.exit(success ? 0 : 1);
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∑–∞–¥–∞—á:', error);
        process.exit(1);
    }
}

if (require.main === module) {
    runTasksTests();
}

module.exports = runTasksTests;