const BaseTestRunner = require('./base-test-runner');

// –ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–æ–≤ SQL —Ñ—É–Ω–∫—Ü–∏–π
class SQLFunctionsTests extends BaseTestRunner {
    async testExecuteTestSQL() {
        console.log('\nüß™ –¢–µ—Å—Ç: –§—É–Ω–∫—Ü–∏—è executeTestSQL');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ executeTestSQL
        const executeTestSQLAvailable = await this.page.evaluate(() => {
            return typeof window.executeTestSQL === 'function';
        });
        
        if (executeTestSQLAvailable) {
            this.pass('–§—É–Ω–∫—Ü–∏—è executeTestSQL –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        } else {
            this.fail('–§—É–Ω–∫—Ü–∏—è executeTestSQL –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º SELECT –∑–∞–ø—Ä–æ—Å
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'SELECT 42 as test_column;';
        });
        await this.page.click('#execute-test-btn');
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const selectResults = await this.page.$eval('#results-container', el => el.innerHTML);
        if (selectResults.includes('test_column')) {
            this.pass('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã SELECT –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "test_column")');
        } else {
            this.fail('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã SELECT –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "test_column")');
        }
        
        if (selectResults.toLowerCase().includes('success')) {
            this.pass('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "success")');
        } else {
            this.fail('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "success")');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º CREATE TABLE
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'CREATE TABLE test_table (id INTEGER PRIMARY KEY, name TEXT);';
        });
        await this.page.click('#execute-test-btn');
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const createResults = await this.page.$eval('#results-container', el => el.innerHTML);
        if (createResults.toLowerCase().includes('success')) {
            this.pass('CREATE TABLE –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "success")');
        } else {
            this.fail('CREATE TABLE –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "success")');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ (–ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å)
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = '';
        });
        await this.page.click('#execute-test-btn');
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const errorResults = await this.page.$eval('#results-container', el => el.innerHTML);
        if (errorResults.toLowerCase().includes('error')) {
            this.pass('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—Å—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "error")');
        } else {
            this.fail('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—Å—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "error")');
        }
    }

    async testCheckSolutionSQL() {
        console.log('\nüß™ –¢–µ—Å—Ç: –§—É–Ω–∫—Ü–∏—è checkSolutionSQL');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ checkSolutionSQL
        const checkSolutionSQLAvailable = await this.page.evaluate(() => {
            return typeof window.checkSolutionSQL === 'function';
        });
        
        if (checkSolutionSQLAvailable) {
            this.pass('–§—É–Ω–∫—Ü–∏—è checkSolutionSQL –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        } else {
            this.fail('–§—É–Ω–∫—Ü–∏—è checkSolutionSQL –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "Check Solution"
        const checkSolutionButton = await this.page.$('#check-solution-btn');
        if (checkSolutionButton !== null) {
            this.pass('–ö–Ω–æ–ø–∫–∞ "Check Solution" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        } else {
            this.fail('–ö–Ω–æ–ø–∫–∞ "Check Solution" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ—à–µ–Ω–∏—è
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'SELECT * FROM students;';
        });
        
        await this.page.click('#check-solution-btn');
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modalVisible = await this.page.evaluate(() => {
            const modal = document.getElementById('task-result-modal');
            return modal && modal.style.display !== 'none';
        });
        
        if (modalVisible) {
            this.pass('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ—è–≤–∏–ª–æ—Å—å');
        } else {
            this.fail('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ—è–≤–∏–ª–æ—Å—å');
        }
        
        const modalContent = await this.page.evaluate(() => {
            const modalBody = document.querySelector('#task-result-modal .modal-content');
            return modalBody ? modalBody.textContent : '';
        });
        
        if (modalContent && modalContent.length > 0) {
            this.pass('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏');
        } else {
            this.fail('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏');
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await this.page.click('#task-result-modal .close');
        await new Promise(resolve => setTimeout(resolve, 500));
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –Ω–µ-SELECT –∑–∞–ø—Ä–æ—Å–∞
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'UPDATE students SET age = 25;';
        });
        
        await this.page.click('#check-solution-btn');
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        const errorModalContent = await this.page.evaluate(() => {
            const modalBody = document.querySelector('#task-result-modal .modal-content');
            return modalBody ? modalBody.textContent : '';
        });
        
        if (errorModalContent.toLowerCase().includes('error')) {
            this.pass('–û—à–∏–±–∫–∞ –¥–ª—è –Ω–µ-SELECT –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "error")');
        } else {
            this.fail('–û—à–∏–±–∫–∞ –¥–ª—è –Ω–µ-SELECT –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "error")');
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await this.page.click('#task-result-modal .close');
        await new Promise(resolve => setTimeout(resolve, 500));
    }

    async testExecuteTestQueryButton() {
        console.log('\nüß™ –¢–µ—Å—Ç: –ö–Ω–æ–ø–∫–∞ "Execute Test Query"');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "Execute Test Query"
        const executeTestButton = await this.page.$('#execute-test-btn');
        if (executeTestButton !== null) {
            this.pass('–ö–Ω–æ–ø–∫–∞ "Execute Test Query" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        } else {
            this.fail('–ö–Ω–æ–ø–∫–∞ "Execute Test Query" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'SELECT 42 as answer;';
        });
        
        await this.page.click('#execute-test-btn');
        
        // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        const resultsContent = await this.page.$eval('#results-container', el => el.innerHTML);
        console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ —Ç–∞–π–º–∞—É—Ç–∞:', resultsContent);
        console.log('üîç –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', resultsContent);
        
        if (resultsContent.includes('42')) {
            this.pass('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "42")');
        } else {
            this.fail('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "42")');
        }
        
        if (resultsContent.includes('answer')) {
            this.pass('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "answer")');
        } else {
            this.fail('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è (—Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: "answer")');
        }
    }

    async testCheckTaskSolutionButton() {
        console.log('\nüß™ –¢–µ—Å—Ç: –ö–Ω–æ–ø–∫–∞ "Check Task Solution"');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É "Check Task Solution"
        const checkTaskButton = await this.page.$('#check-solution-btn');
        if (checkTaskButton !== null) {
            this.pass('–ö–Ω–æ–ø–∫–∞ "Check Task Solution" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        } else {
            this.fail('–ö–Ω–æ–ø–∫–∞ "Check Task Solution" –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const dbReady = await this.page.evaluate(() => {
            return window.db && typeof window.db.exec === 'function';
        });
        
        if (!dbReady) {
            console.log('‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç');
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
        await this.page.click('#check-solution-btn');
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const modalAppeared = await this.page.evaluate(() => {
            const modal = document.getElementById('task-result-modal');
            return modal && modal.style.display !== 'none';
        });
        
        if (modalAppeared) {
            this.pass('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—è–≤–∏–ª–æ—Å—å –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ');
        } else {
            this.fail('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—è–≤–∏–ª–æ—Å—å –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ');
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await this.page.click('#task-result-modal .close');
        await new Promise(resolve => setTimeout(resolve, 500));
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö SQL —Ç–µ—Å—Ç–æ–≤
    async runAllTests() {
        console.log('\nüîß === –¢–ï–°–¢–´ SQL –§–£–ù–ö–¶–ò–ô === üîß\n');
        
        try {
            await this.testExecuteTestSQL();
            await this.testCheckSolutionSQL();
            await this.testExecuteTestQueryButton();
            await this.testCheckTaskSolutionButton();
            
            return this.summary();
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL —Ç–µ—Å—Ç–æ–≤:', error);
            this.fail(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }
}

module.exports = SQLFunctionsTests;