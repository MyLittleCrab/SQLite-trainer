const { BaseTest } = require('./utils/test-config');

// –ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
class PerformanceTests extends BaseTest {
    async testPageLoadSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        
        const startTime = Date.now();
        
        // –ò–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await this.page.goto(`http://localhost:8000/index.html`, { 
            waitUntil: 'networkidle0' 
        });
        
        const loadTime = Date.now() - startTime;
        console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}–º—Å`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (–º–µ–Ω–µ–µ 5 —Å–µ–∫—É–Ω–¥)
        await this.runner.assert(
            loadTime < 5000, 
            `–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${loadTime}–º—Å < 5000–º—Å)`
        );
    }

    async testSQLiteInitSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite');
        
        const startTime = Date.now();
        
        // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite
        try {
            await this.page.waitForFunction(
                () => window.db !== null && window.SQL !== null,
                { timeout: 10000 }
            );
            
            const initTime = Date.now() - startTime;
            console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite: ${initTime}–º—Å`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ SQLite –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (–º–µ–Ω–µ–µ 8 —Å–µ–∫—É–Ω–¥)
            await this.runner.assert(
                initTime < 8000, 
                `SQLite –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${initTime}–º—Å < 8000–º—Å)`
            );
            
        } catch (error) {
            await this.runner.assert(false, 'SQLite –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥');
        }
    }

    async testQueryExecutionSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤');
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∏ –∏–∑–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è
        const startTime = Date.now();
        
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'SELECT COUNT(*) FROM students';
        });
        
        await this.page.click('#execute-test-btn');
        
        // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await this.page.waitForFunction(
            () => {
                const results = document.getElementById('results-container').innerHTML;
                return results.includes('Query executed successfully') || 
                       results.includes('–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            },
            { timeout: 5000 }
        );
        
        const executionTime = Date.now() - startTime;
        console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: ${executionTime}–º—Å`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (–º–µ–Ω–µ–µ 2 —Å–µ–∫—É–Ω–¥)
        await this.runner.assert(
            executionTime < 2000, 
            `SQL –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${executionTime}–º—Å < 2000–º—Å)`
        );
    }

    async testMemoryUsage() {
        console.log('\nüß™ –¢–µ—Å—Ç: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        const memoryInfo = await this.page.evaluate(() => {
            if (performance.memory) {
                return {
                    usedJSHeapSize: performance.memory.usedJSHeapSize,
                    totalJSHeapSize: performance.memory.totalJSHeapSize,
                    jsHeapSizeLimit: performance.memory.jsHeapSizeLimit
                };
            }
            return null;
        });
        
        if (memoryInfo) {
            const usedMB = Math.round(memoryInfo.usedJSHeapSize / 1024 / 1024);
            console.log(`üíæ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞–º—è—Ç–∏: ${usedMB}MB`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑—É–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–º—è—Ç–∏ (–º–µ–Ω–µ–µ 100MB)
            await this.runner.assert(
                usedMB < 100, 
                `–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑—É–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–º—è—Ç–∏ (${usedMB}MB < 100MB)`
            );
        } else {
            console.log('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–º—è—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
            await this.runner.assert(true, '–¢–µ—Å—Ç –ø–∞–º—è—Ç–∏ –ø—Ä–æ–ø—É—â–µ–Ω (API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)');
        }
    }

    async testResponseTimes() {
        console.log('\nüß™ –¢–µ—Å—Ç: –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
        const startTime = Date.now();
        
        await this.page.click('#execute-test-btn');
        
        // –ñ–¥–µ–º –ª—é–±–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await this.page.waitForFunction(
            () => {
                const results = document.getElementById('results-container').innerHTML;
                return results.trim().length > 0;
            },
            { timeout: 3000 }
        );
        
        const responseTime = Date.now() - startTime;
        console.log(`‚ö° –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: ${responseTime}–º—Å`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∑—ã–≤—á–∏–≤—ã–π (–º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã)
        await this.runner.assert(
            responseTime < 1000, 
            `–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∑—ã–≤—á–∏–≤—ã–π (${responseTime}–º—Å < 1000–º—Å)`
        );
    }
}

module.exports = PerformanceTests;