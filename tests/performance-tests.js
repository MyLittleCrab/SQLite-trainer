const BaseTestRunner = require('./base-test-runner');

// –ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
class PerformanceTests extends BaseTestRunner {
    async testPageLoadSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        
        const startTime = Date.now();
        await this.page.goto('http://localhost:8000/index.html', { waitUntil: 'networkidle0' });
        const loadTime = Date.now() - startTime;
        
        console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}–º—Å`);
        
        if (loadTime < 5000) {
            this.pass(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${loadTime}–º—Å < 5000–º—Å)`);
        } else {
            this.fail(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${loadTime}–º—Å < 5000–º—Å)`);
        }
    }

    async testSQLiteInitSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite');
        
        const startTime = Date.now();
        
        try {
            await this.page.waitForFunction(() => {
                return window.db && typeof window.db.exec === 'function';
            }, { timeout: 8000 });
            
            const initTime = Date.now() - startTime;
            console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite: ${initTime}–º—Å`);
            
            if (initTime < 8000) {
                this.pass(`SQLite –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${initTime}–º—Å < 8000–º—Å)`);
            } else {
                this.fail(`SQLite –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${initTime}–º—Å < 8000–º—Å)`);
            }
        } catch (error) {
            console.log('‚è±Ô∏è –í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SQLite: >8000–º—Å (timeout)');
            this.fail('SQLite –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (>8000–º—Å < 8000–º—Å)');
        }
    }

    async testQueryExecutionSpeed() {
        console.log('\nüß™ –¢–µ—Å—Ç: –°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤');
        
        // –í–≤–æ–¥–∏–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        await this.page.evaluate(() => {
            document.getElementById('sql-input').value = 'SELECT * FROM students LIMIT 5;';
        });
        
        const startTime = Date.now();
        await this.page.click('#execute-test-btn');
        
        // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await this.page.waitForFunction(() => {
            const results = document.getElementById('results-container');
            return results && results.innerHTML.includes('students');
        }, { timeout: 2000 });
        
        const executionTime = Date.now() - startTime;
        console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: ${executionTime}–º—Å`);
        
        if (executionTime < 2000) {
            this.pass(`SQL –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${executionTime}–º—Å < 2000–º—Å)`);
        } else {
            this.fail(`SQL –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ (${executionTime}–º—Å < 2000–º—Å)`);
        }
    }

    async testMemoryUsage() {
        console.log('\nüß™ –¢–µ—Å—Ç: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏');
        
        const memoryMetrics = await this.page.metrics();
        const memoryUsedMB = Math.round(memoryMetrics.JSHeapUsedSize / 1024 / 1024);
        
        console.log(`üíæ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞–º—è—Ç–∏: ${memoryUsedMB}MB`);
        
        if (memoryUsedMB < 100) {
            this.pass(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑—É–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–º—è—Ç–∏ (${memoryUsedMB}MB < 100MB)`);
        } else {
            this.fail(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑—É–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–º—è—Ç–∏ (${memoryUsedMB}MB < 100MB)`);
        }
    }

    async testResponseTimes() {
        console.log('\nüß™ –¢–µ—Å—Ç: –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∫–Ω–æ–ø–∫–∏
        const startTime = Date.now();
        await this.page.click('#execute-test-btn');
        
        // –ñ–¥–µ–º –ª—é–±–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        await this.page.waitForFunction(() => {
            const results = document.getElementById('results-container');
            return results && results.innerHTML !== '';
        }, { timeout: 1000 });
        
        const responseTime = Date.now() - startTime;
        console.log(`‚ö° –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: ${responseTime}–º—Å`);
        
        if (responseTime < 1000) {
            this.pass(`–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∑—ã–≤—á–∏–≤—ã–π (${responseTime}–º—Å < 1000–º—Å)`);
        } else {
            this.fail(`–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∑—ã–≤—á–∏–≤—ã–π (${responseTime}–º—Å < 1000–º—Å)`);
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    async runAllTests() {
        console.log('\n‚ö° === –¢–ï–°–¢–´ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò === ‚ö°\n');
        
        try {
            await this.testPageLoadSpeed();
            await this.testSQLiteInitSpeed();
            await this.testQueryExecutionSpeed();
            await this.testMemoryUsage();
            await this.testResponseTimes();
            
            return this.summary();
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
            this.fail(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
            return false;
        }
    }
}

module.exports = PerformanceTests;